syntax = "proto3";
package pylons.pylons;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "pylons/pylons/redeem_info.proto";
import "pylons/pylons/payment_info.proto";
import "pylons/pylons/accounts.proto";
import "pylons/pylons/trade.proto";
import "pylons/pylons/google_iap_order.proto";
import "pylons/pylons/execution.proto";
import "pylons/pylons/item.proto";
import "pylons/pylons/recipe.proto";
import "pylons/pylons/cookbook.proto";
import "pylons/pylons/stripe_refund.proto";

option go_package = "github.com/Pylons-tech/pylons/x/pylons/types";

// Query defines the gRPC querier service.
service Query {
	// Queries a list of listTradesByCreator items.
	rpc ListTradesByCreator(QueryListTradesByCreatorRequest) returns (QueryListTradesByCreatorResponse) {
		option (google.api.http).get = "/pylons/trades/{creator}";
	}

	// Queries a list of Signup by Referee Address items.
	rpc ListSignUpByReferee(QueryListSignUpByReferee) returns (QueryListSignUpByRefereeResponse) {
		option (google.api.http).get = "/pylons/trades/{creator}";
	}
// Queries a list of GetRecipeHistory items.
	rpc GetRecipeHistory(QueryGetRecipeHistoryRequest) returns (QueryGetRecipeHistoryResponse) {
		option (google.api.http).get = "/pylons/get_recipe_history/{cookbook_id}/{recipe_id}";
	}

// Queries a list of GetStripeRefund items.
	rpc GetStripeRefund(QueryGetStripeRefundRequest) returns (QueryGetStripeRefundResponse) {
		option (google.api.http).get = "/pylons/get_stripe_refund";
	}


	// Retrieves an item history by id.
	rpc GetItemOwnershipHistory(QueryGetItemHistoryRequest) returns (QueryGetItemHistoryResponse) {
		option (google.api.http).get = "/pylons/item_history/{cookbook_id}/{item_id}";
	}


// this line is used by starport scaffolding # 2

	// Queries a redeemInfo by index.
	rpc RedeemInfo(QueryGetRedeemInfoRequest) returns (QueryGetRedeemInfoResponse) {
		option (google.api.http).get = "/pylons/redeem/{id}";
	}

	// Queries a list of redeemInfo items.
	rpc RedeemInfoAll(QueryAllRedeemInfoRequest) returns (QueryAllRedeemInfoResponse) {
		option (google.api.http).get = "/pylons/redeems";
	}


	// Queries a paymentInfo by index.
	rpc PaymentInfo(QueryGetPaymentInfoRequest) returns (QueryGetPaymentInfoResponse) {
		option (google.api.http).get = "/pylons/payment/{purchase_id}";
	}

	// Queries a list of paymentInfo items.
	rpc PaymentInfoAll(QueryAllPaymentInfoRequest) returns (QueryAllPaymentInfoResponse) {
		option (google.api.http).get = "/pylons/payments";
	}


	// Queries a list of getAccountByAddress items.
	rpc UsernameByAddress(QueryGetUsernameByAddressRequest) returns (QueryGetUsernameByAddressResponse) {
		option (google.api.http).get = "/pylons/account/address/{address}";
	}

	// Queries a username by account.
	rpc AddressByUsername(QueryGetAddressByUsernameRequest) returns (QueryGetAddressByUsernameResponse) {
		option (google.api.http).get = "/pylons/account/username/{username}";
	}

	// Queries a trade by id.
	rpc Trade(QueryGetTradeRequest) returns (QueryGetTradeResponse) {
		option (google.api.http).get = "/pylons/trade/{id}";
	}

	// Queries a list of listItemByOwner items.
	rpc ListItemByOwner(QueryListItemByOwnerRequest) returns (QueryListItemByOwnerResponse) {
		option (google.api.http).get = "/pylons/items/{owner}";
	}

	// Queries a googleIAPOrder by purchase_token.
	rpc GoogleInAppPurchaseOrder(QueryGetGoogleInAppPurchaseOrderRequest) returns (QueryGetGoogleInAppPurchaseOrderResponse) {
		option (google.api.http).get = "/pylons/iap/{purchase_token}";
	}

	// Queries a list of listExecutionsByItem items.
	rpc ListExecutionsByItem(QueryListExecutionsByItemRequest) returns (QueryListExecutionsByItemResponse) {
		option (google.api.http).get = "/pylons/executions/item/{cookbook_id}/{item_id}";
	}

	// Queries a list of listExecutionsByRecipe items.
	rpc ListExecutionsByRecipe(QueryListExecutionsByRecipeRequest) returns (QueryListExecutionsByRecipeResponse) {
		option (google.api.http).get = "/pylons/executions/recipe/{cookbook_id}/{recipe_id}";
	}

	// Queries a execution by id.
	rpc Execution(QueryGetExecutionRequest) returns (QueryGetExecutionResponse) {
		option (google.api.http).get = "/pylons/execution/{id}";
	}

	// Queries a list of listRecipesByCookbook items.
	rpc ListRecipesByCookbook(QueryListRecipesByCookbookRequest) returns (QueryListRecipesByCookbookResponse) {
		option (google.api.http).get = "/pylons/recipes/{cookbook_id}";
	}

	// Queries a item by id.
	rpc Item(QueryGetItemRequest) returns (QueryGetItemResponse) {
		option (google.api.http).get = "/pylons/item/{cookbook_id}/{id}";
	}

	// Retrieves a recipe by id.
	rpc Recipe(QueryGetRecipeRequest) returns (QueryGetRecipeResponse) {
		option (google.api.http).get = "/pylons/recipe/{cookbook_id}/{id}";
	}

	// Retrieves the list of cookbooks owned by an address
	rpc ListCookbooksByCreator(QueryListCookbooksByCreatorRequest) returns (QueryListCookbooksByCreatorResponse) {
		option (google.api.http).get = "/pylons/cookbooks/{creator}";
	}

	// Retrieves a cookbook by id.
	rpc Cookbook(QueryGetCookbookRequest) returns (QueryGetCookbookResponse) {
		option (google.api.http).get = "/pylons/cookbook/{id}";
	}
}

message QueryListSignUpByReferee{
	string creator = 1;
}

message QueryListSignUpByRefereeResponse{
	ReferralKV signup = 1;
}

message QueryListTradesByCreatorRequest {
  string creator = 1;
	cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryListTradesByCreatorResponse {
	option (gogoproto.equal)           = false;
	option (gogoproto.goproto_getters) = false;
	repeated Trade trades = 1 [(gogoproto.nullable) = false];

	// pagination defines the pagination in the response.
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetItemHistoryRequest {
  string cookbook_id = 1;
  string item_id = 2;
  string minted_number = 3;
}

message QueryGetItemHistoryResponse {
	repeated ItemHistory history = 1;
}


message QueryGetRecipeHistoryRequest {
  string cookbook_id = 1;
  string recipe_id = 2;
}

message QueryGetRecipeHistoryResponse {
	repeated RecipeHistory history = 1;
}

message RecipeHistory {
	string item_id = 1;
	string cookbook_id = 2;
	string recipe_id = 3;
	string sender = 4;
	string sender_name = 5;
	string receiver = 6;
	string amount = 7;
	int64 created_at = 8;
}
message QueryGetStripeRefundRequest {
}

message QueryGetStripeRefundResponse {
	repeated StripeRefund refunds = 1;
}

// this line is used by starport scaffolding # 3

message QueryGetRedeemInfoRequest {
	string id = 1;
}

message QueryGetRedeemInfoResponse {
	RedeemInfo redeem_info = 1 [(gogoproto.nullable) = false];
}

message QueryAllRedeemInfoRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllRedeemInfoResponse {
	repeated RedeemInfo redeem_info = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetPaymentInfoRequest {
	string purchase_id = 1;
}

message QueryGetPaymentInfoResponse {
	PaymentInfo payment_info = 1 [(gogoproto.nullable) = false];
}

message QueryAllPaymentInfoRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPaymentInfoResponse {
	repeated PaymentInfo payment_info = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetUsernameByAddressRequest {
  string address = 1;
}

message QueryGetAddressByUsernameRequest {
	string username = 1;
}

message QueryGetUsernameByAddressResponse {
	Username username = 1 [(gogoproto.nullable) = false];
}

message QueryGetAddressByUsernameResponse {
	AccountAddr address = 1 [(gogoproto.nullable) = false];
}

message QueryGetTradeRequest {
	uint64 id = 1;
}

message QueryGetTradeResponse {
	Trade trade = 1 [(gogoproto.nullable) = false];
}

message QueryListItemByOwnerRequest {
  string owner = 1;

	// pagination defines an optional pagination for the request.
	cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

message QueryListItemByOwnerResponse {
	option (gogoproto.equal)           = false;
	option (gogoproto.goproto_getters) = false;
	repeated Item items = 1 [(gogoproto.nullable) = false];

	// pagination defines the pagination in the response.
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetGoogleInAppPurchaseOrderRequest {
	string purchase_token = 1;
}

message QueryGetGoogleInAppPurchaseOrderResponse {
	GoogleInAppPurchaseOrder order = 1 [(gogoproto.nullable) = false];
}

message QueryListExecutionsByItemRequest {
	option (gogoproto.equal)           = false;
	option (gogoproto.goproto_getters) = false;

	string cookbook_id = 1;
	string item_id = 2;

	// pagination defines an optional pagination for the request.
	cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

message QueryListExecutionsByItemResponse {
	repeated Execution completed_executions = 1 [(gogoproto.nullable) = false];
	repeated Execution pending_executions = 2 [(gogoproto.nullable) = false];

	// pagination defines the pagination in the response.
	cosmos.base.query.v1beta1.PageResponse pagination = 3;
}

message QueryListExecutionsByRecipeRequest {
	option (gogoproto.equal)           = false;
	option (gogoproto.goproto_getters) = false;

	string cookbook_id = 1;
	string recipe_id = 2;

	// pagination defines an optional pagination for the request.
	cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

message QueryListExecutionsByRecipeResponse {
	repeated Execution completed_executions = 1 [(gogoproto.nullable) = false];
	repeated Execution pending_executions = 2 [(gogoproto.nullable) = false];

	// pagination defines the pagination in the response.
	cosmos.base.query.v1beta1.PageResponse pagination = 3;
}

message QueryGetExecutionRequest {
	string id = 1;
}

message QueryGetExecutionResponse {
	Execution execution = 1 [(gogoproto.nullable) = false];
	bool completed = 2;
}

message QueryListRecipesByCookbookRequest {
  string cookbook_id = 1;

	// pagination defines an optional pagination for the request.
	cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryListRecipesByCookbookResponse {
	repeated Recipe recipes = 1 [(gogoproto.nullable) = false];

	// pagination defines the pagination in the response.
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetItemRequest {
	string cookbook_id = 1;
	string id = 3;
}

message QueryGetItemResponse {
	Item item = 1 [(gogoproto.nullable) = false];
}

message QueryGetRecipeRequest {
	string cookbook_id = 1;
	string id = 2;
}

message QueryGetRecipeResponse {
	Recipe recipe = 1 [(gogoproto.nullable) = false];
}


message QueryListCookbooksByCreatorRequest {
  string creator = 1;

	// pagination defines an optional pagination for the request.
	cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

message QueryListCookbooksByCreatorResponse {
  repeated Cookbook cookbooks = 1 [(gogoproto.nullable) = false];

	// pagination defines the pagination in the response.
	cosmos.base.query.v1beta1.PageResponse pagination = 3;
}

message QueryGetCookbookRequest {
	string id = 1;
}

message QueryGetCookbookResponse {
	Cookbook cookbook = 1 [(gogoproto.nullable) = false];
}

