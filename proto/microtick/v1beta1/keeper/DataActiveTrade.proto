syntax = "proto3";
package microtick.keeper;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/microtick/mtzone/x/microtick/keeper";

message DataQuotedParams {
  
  uint32 id = 1 [
    (gogoproto.jsontag) = "id"
  ];
  
  bool final = 2 [
    (gogoproto.jsontag) = "final"
  ];
  
  cosmos.base.v1beta1.DecCoin premium = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "premium"
  ];
  
  cosmos.base.v1beta1.DecCoin remain_backing = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "remain_backing"
  ];
  
  cosmos.base.v1beta1.DecCoin spot = 5 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "spot"
  ];
  
}

message DataTradeLeg {
  
  uint32 leg_id = 1 [
    (gogoproto.jsontag) = "leg_id"
  ];
  
  bool type = 2 [
    (gogoproto.jsontag) = "type"
  ];
  
  cosmos.base.v1beta1.DecCoin backing = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "backing"
  ];
  
  cosmos.base.v1beta1.DecCoin premium = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "premium"
  ];
  
  cosmos.base.v1beta1.DecCoin cost = 5 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "cost"
  ];
  
  cosmos.base.v1beta1.DecCoin quantity = 6 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "quantity"
  ];
  
  bytes long = 7 [
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress",
    (gogoproto.jsontag) = "long"
  ];
  
  bytes short = 8 [
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress",
    (gogoproto.jsontag) = "short"
  ];
  
  DataQuotedParams quoted = 9 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "quoted"
  ];
  
}

message DataActiveTrade {
  
  uint32 id = 1 [
    (gogoproto.jsontag) = "id"
  ];
  
  string market = 2 [
    (gogoproto.jsontag) = "market"
  ];
  
  string duration = 3 [
    (gogoproto.jsontag) = "duration"
  ];
  
  string order = 4 [
    (gogoproto.jsontag) = "order"
  ];
  
  bytes taker = 5 [
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress",
    (gogoproto.jsontag) = "taker"
  ];
  
  cosmos.base.v1beta1.DecCoin quantity = 6 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "quantity"
  ];
  
  repeated DataTradeLeg legs = 7 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "legs"
  ];
  
  int64 start = 8 [
    (gogoproto.jsontag) = "start"
  ];
  
  int64 expiration = 9 [
    (gogoproto.jsontag) = "expiration"
  ];
  
  cosmos.base.v1beta1.DecCoin strike = 10 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "strike"
  ];
  
  cosmos.base.v1beta1.DecCoin commission = 11 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "commission"
  ];
  
  cosmos.base.v1beta1.DecCoin settle_incentive = 12 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "settleIncentive"
  ];
  
}
